import os
from dotenv import load_dotenv
import telebot
from telebot.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton


# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()


API_TOKEN = os.getenv("API_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")
WELCOME_IMAGE_URL = os.getenv("WELCOME_IMAGE_URL") # –ù–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è


bot = telebot.TeleBot(API_TOKEN)


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_languages = {}

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
translations = {
    'ru': {
        'welcome_message': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
        'shop_button': 'üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
        'news_button': 'üì∞ –ù–æ–≤–æ—Å—Ç–∏',
        'reviews_button': '‚≠ê –û—Ç–∑—ã–≤—ã',
        'main_menu_message': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–º–∏—É–º-—Ä–µ–ø–ª–∏–∫!',
        'order_received': '‚úÖ –ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑:\n{}'
    },
    'en': {
        'welcome_message': 'Welcome! Please choose your language:',
        'shop_button': 'üõç Open Shop',
        'news_button': 'üì∞ News',
        'reviews_button': '‚≠ê Reviews',
        'main_menu_message': 'Welcome to the premium replica store!',
        'order_received': '‚úÖ Order received:\n{}'
    }
}

def get_text(user_id, key):
    lang = user_languages.get(user_id, 'ru') # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
    return translations[lang].get(key, '–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')

def send_main_menu(message, lang):
    user_languages[message.chat.id] = lang
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(get_text(message.chat.id, 'shop_button'), web_app=WebAppInfo(url=WEBAPP_URL)))
    markup.add(InlineKeyboardButton(get_text(message.chat.id, 'news_button'), callback_data='news'))
    markup.add(InlineKeyboardButton(get_text(message.chat.id, 'reviews_button'), callback_data='reviews'))
    
    # –ò–∑–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ
    bot.edit_message_caption(chat_id=message.chat.id, message_id=message.message_id, caption=get_text(message.chat.id, 'main_menu_message'))
    bot.edit_message_reply_markup(chat_id=message.chat.id, message_id=message.message_id, reply_markup=markup)


@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('üá∑üá∫ RU', callback_data='lang_ru'))
    markup.add(InlineKeyboardButton('üá¨üáß EN', callback_data='lang_en'))
    
    bot.send_photo(message.chat.id, WELCOME_IMAGE_URL, caption=get_text(message.chat.id, 'welcome_message'), reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('lang_'))
def choose_language(call):
    lang = call.data.split('_')[1]
    # –í–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ
    send_main_menu(call.message, lang)

@bot.callback_query_handler(func=lambda call: call.data == 'news')
def show_news(call):
    bot.answer_callback_query(call.id, text=get_text(call.message.chat.id, 'news_button'))
    bot.send_message(call.message.chat.id, '–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–æ–≤–æ—Å—Ç–∏ (–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ).') # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏

@bot.callback_query_handler(func=lambda call: call.data == 'reviews')
def show_reviews(call):
    bot.answer_callback_query(call.id, text=get_text(call.message.chat.id, 'reviews_button'))
    bot.send_message(call.message.chat.id, '–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–∑—ã–≤—ã (–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ).') # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã

@bot.message_handler(content_types=['web_app_data'])
def handle_order(message):
    data = message.web_app_data.data
    bot.send_message(message.chat.id, get_text(message.chat.id, 'order_received').format(data))


if __name__ == '__main__':
    if not WELCOME_IMAGE_URL:
        print("Error: WELCOME_IMAGE_URL not set in .env. Please provide a URL for the welcome image.")
        exit()
    bot.infinity_polling()


