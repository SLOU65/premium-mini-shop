import os
from dotenv import load_dotenv
import telebot
from telebot.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

API_TOKEN = os.getenv('API_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

bot = telebot.TeleBot(API_TOKEN)

# –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
CHANNELS = {
    'news_ru': 'https://t.me/your_news_channel_ru',
    'news_en': 'https://t.me/your_news_channel_en',
    'reviews_ru': 'https://t.me/your_reviews_channel_ru',
    'reviews_en': 'https://t.me/your_reviews_channel_en'
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_languages = {}

# –¢–µ–∫—Å—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤
TEXTS = {
    'ru': {
        'welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–º–∏—É–º‚Äë—Ä–µ–ø–ª–∏–∫!',
        'choose_language': '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:',
        'shop_button': 'üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
        'news_button': 'üì∞ –ù–æ–≤–æ—Å—Ç–∏',
        'reviews_button': '‚≠ê –û—Ç–∑—ã–≤—ã',
        'back_button': 'üîô –ù–∞–∑–∞–¥',
        'language_set': '–Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –†—É—Å—Å–∫–∏–π'
    },
    'en': {
        'welcome': 'Welcome to the premium replica store!',
        'choose_language': 'Choose language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
        'shop_button': 'üõç Open Store',
        'news_button': 'üì∞ News',
        'reviews_button': '‚≠ê Reviews',
        'back_button': 'üîô Back',
        'language_set': 'Language set: English'
    }
}

def get_language_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("üá∑üá∫ RU", callback_data="lang_ru"),
        InlineKeyboardButton("üá∫üá∏ EN", callback_data="lang_en")
    )
    return markup

def get_main_menu_keyboard(lang):
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞"""
    markup = InlineKeyboardMarkup()
    texts = TEXTS[lang]
    
    markup.add(InlineKeyboardButton(texts['shop_button'], web_app=WebAppInfo(url=WEBAPP_URL)))
    markup.row(
        InlineKeyboardButton(texts['news_button'], url=CHANNELS[f'news_{lang}']),
        InlineKeyboardButton(texts['reviews_button'], url=CHANNELS[f'reviews_{lang}'])
    )
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –∫–∞—Ä—Ç–∏–Ω–∫—É)
    welcome_photo = "https://raw.githubusercontent.com/SLOU65/premium-mini-shop/refs/heads/main/image1.jpg"
    
    try:
        bot.send_photo(
            message.chat.id, 
            welcome_photo,
            caption=TEXTS['ru']['choose_language'],
            reply_markup=get_language_keyboard()
        )
    except:
        # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        bot.send_message(
            message.chat.id,
            TEXTS['ru']['choose_language'],
            reply_markup=get_language_keyboard()
        )

@bot.callback_query_handler(func=lambda call: call.data.startswith('lang_'))
def handle_language_selection(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    user_id = call.from_user.id
    lang = call.data.split('_')[1]  # ru –∏–ª–∏ en
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
    user_languages[user_id] = lang
    texts = TEXTS[lang]
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    bot.answer_callback_query(call.id, texts['language_set'])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    show_main_menu(call.message, lang)

def show_main_menu(message, lang):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    texts = TEXTS[lang]
    
    # –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é)
    menu_photo = "https://raw.githubusercontent.com/SLOU65/premium-mini-shop/refs/heads/main/image1.jpg"
    
    try:
        bot.send_photo(
            message.chat.id,
            menu_photo,
            caption=texts['welcome'],
            reply_markup=get_main_menu_keyboard(lang)
        )
    except:
        # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        bot.send_message(
            message.chat.id,
            texts['welcome'],
            reply_markup=get_main_menu_keyboard(lang)
        )

@bot.message_handler(content_types=['web_app_data'])
def handle_order(message):
    data = message.web_app_data.data
    bot.send_message(message.chat.id, f"‚úÖ –ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑:\n{data}")

if __name__ == "__main__":
    bot.infinity_polling()
