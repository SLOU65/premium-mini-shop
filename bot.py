import os
from dotenv import load_dotenv
import telebot
from telebot.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton


# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()


API_TOKEN = os.getenv('API_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

bot = telebot.TeleBot(API_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_language = {}

# –¢–µ–∫—Å—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤
TEXTS = {
    'ru': {
        'welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
        'main_menu_welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–º–∏—É–º-—Ä–µ–ø–ª–∏–∫!',
        'open_shop': 'üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
        'news': 'üì∞ –ù–æ–≤–æ—Å—Ç–∏',
        'reviews': '‚≠ê –û—Ç–∑—ã–≤—ã',
        'language_selected': '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.',
        'order_received': '‚úÖ –ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑:',
    },
    'en': {
        'welcome': 'Welcome! Please select your language:',
        'main_menu_welcome': 'Welcome to the premium replica store!',
        'open_shop': 'üõç Open Shop',
        'news': 'üì∞ News',
        'reviews': '‚≠ê Reviews',
        'language_selected': 'You have selected English.',
        'order_received': '‚úÖ Order received:',
    }
}

# URL –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ—Ç–∑—ã–≤–æ–≤ (–∑–∞–≥–ª—É—à–∫–∏)
NEWS_URL = 'https://example.com/news'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É —Å—Å—ã–ª–∫—É
REVIEWS_URL = 'https://example.com/reviews' # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É —Å—Å—ã–ª–∫—É

def get_main_menu_markup(lang):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(TEXTS[lang]['open_shop'], web_app=WebAppInfo(url=WEBAPP_URL)))
    markup.add(InlineKeyboardButton(TEXTS[lang]['news'], url=NEWS_URL))
    markup.add(InlineKeyboardButton(TEXTS[lang]['reviews'], url=REVIEWS_URL))
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('–†—É—Å—Å–∫–∏–π', callback_data='lang_ru'))
    markup.add(InlineKeyboardButton('English', callback_data='lang_en'))
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏, –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
    bot.send_photo(message.chat.id, photo="https://raw.githubusercontent.com/SLOU65/premium-mini-shop/refs/heads/main/image1.jpg", caption=TEXTS["ru"]["welcome"], reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("lang_"))
def callback_inline(call):
    lang = call.data.split('_')[1]
    user_language[call.message.chat.id] = lang
    bot.edit_message_text(chat_id=call.message.chat.id,
                          message_id=call.message.message_id,
                          text=TEXTS[lang]["language_selected"])
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, TEXTS[lang]["main_menu_welcome"], reply_markup=get_main_menu_markup(lang))

@bot.message_handler(content_types=['web_app_data'])
def handle_order(message):
    data = message.web_app_data.data
    lang = user_language.get(message.chat.id, 'ru') # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π, –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω
    bot.send_message(message.chat.id, f"{TEXTS[lang]['order_received']}\n{data}")


if __name__ == "__main__":
    bot.infinity_polling()
